volumes:
  mysql-volume:

services:
  calculator-service:
    depends_on:
      mysql:
          condition: service_healthy
      message-broker:
        condition: service_started
    restart: always
    build: ./insurance-calculator-app
    env_file:
      - ./insurance-calculator-app/.env
    ports:
      - "8080:8080"
#    environment:
#      - DATABASE_URL=${DATABASE_URL}
#      - DATABASE_USERNAME=${DATABASE_USERNAME}
#      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
#      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
#      - SPRING_RABBITMQ_HOST=${SPRING_RABBITMQ_HOST}
#      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
#      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}

  mysql:
    image: 'mysql:latest'
    restart: always
#    environment:
#      - 'MYSQL_DATABASE=java-real-practice-insurance'
#      - 'MYSQL_PASSWORD=root'
#      - 'MYSQL_ROOT_PASSWORD=root'
    env_file:
      - ./db_init/db.env
    ports:
      - "3306:3306"
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./db_init/general_init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck: # Проверяем, что MySQL запущен и слушает соединения
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      start_period: 10s

  black-list-app:
    user: root
    depends_on:
        mysql:
          condition: service_started
    build: ./black-list-app
    container_name: black-list-container
    restart: always
    ports:
      - "8082:8080"
    env_file:
      - ./black-list-app/blacklist.env

  doc-generator-service:
    user: root
    depends_on:
      message-broker:
        condition: service_started
    build: ./doc-generator-app
    container_name: doc-generator-container
    restart: always
    ports:
      - "8081:8080"
    env_file:
      - ./doc-generator-app/doc-gen.env
    volumes:
      - ./doc-generator-app/docs/proposals:/app/docs/proposals
#    environment:
#      - SPRING_RABBITMQ_HOST=${SPRING_RABBITMQ_HOST}
#      - SPRING_RABBITMQ_USERNAME=${SPRING_RABBITMQ_USERNAME}
#      - SPRING_RABBITMQ_PASSWORD=${SPRING_RABBITMQ_PASSWORD}

  message-broker:
    #networks: insurance-calculator-network
    container_name: rabbitmq-container
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5672"]
      interval: 10s
      retries: 5
      start_period: 10s
