plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = 'unspecified'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    archiveBaseName = 'insurance-calculator'
    archiveVersion = '1.0.2'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    //developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation('mysql:mysql-connector-java:8.0.22')

    implementation 'org.hibernate.orm:hibernate-core:6.3.1.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation ('org.liquibase:liquibase-core:4.24.0')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa:3.2.0')
    implementation('org.springframework.boot:spring-boot-starter-web:3.2.0')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf:3.2.0')

    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation('com.h2database:h2:2.2.224')

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'

    implementation('com.google.guava:guava:31.0.1-jre')

    //validation
    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation('jakarta.validation:jakarta.validation-api:3.1.0')
    implementation('org.hibernate.validator:hibernate-validator:8.0.0.Final')
    //https:mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation -->
    implementation('org.springframework.boot:spring-boot-starter-validation:3.4.0')

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-amqp
    implementation 'org.springframework.boot:spring-boot-starter-amqp:3.4.2'

    // https://mvnrepository.com/artifact/com.rabbitmq/amqp-client
    implementation 'com.rabbitmq:amqp-client:5.25.0'

    compileOnly('org.projectlombok:lombok:1.18.30')
    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct
    compileOnly 'org.mapstruct:mapstruct:1.6.3'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok-mapstruct-binding
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.1.0'
    // https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    annotationProcessor('org.projectlombok:lombok:1.18.30')

    testImplementation('com.h2database:h2:1.4.200')
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation('org.mockito:mockito-core:5.11.0')
    testCompileOnly('org.projectlombok:lombok:1.18.30')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.30')
}

test {
    useJUnitPlatform()
}